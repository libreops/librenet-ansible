#!/usr/bin/env bash
set -e

# Backblaze B2 configuration variables
B2_ACCOUNT="{{ account }}"
B2_KEY="{{ key }}"
B2_BUCKET="{{ bucket }}"
export PASSPHRASE="{{ passphrase }}"

# Local configuration variables
DATE=$(date +%F-%s)
DEST="/var/backup/diaspora"
LOGFILE="${DEST}/backup.log"
TARFILE="${DEST}/diaspora-${DATE}.tar.gz"
SQLFILE="${DEST}/diaspora.psql"
UPLOADSDIR="/var/www/diaspora/public/uploads"
PROSODYDIR="/var/lib/prosody"

# Make sure backup dir exits
[ ! -d "$DEST/latest" ] && mkdir -p "$DEST/latest"

# Dump Diaspora's postgres database.
# You must have /home/diaspora/.pgpass properly configured.
sudo -u diaspora -H pg_dump -Fc diaspora_production -f ${SQLFILE}/psql
sudo -u diaspora -H pg_dump -Fc diaspora_production -f ${SQLFILE}/uploads
sudo -u diaspora -H pg_dump -Fc diaspora_production -f ${SQLFILE}/prosody

# Backblaze backup
# Remove files older than 90 days from Backblaze
duplicity remove-older-than 90D --force b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}
# Sync everything to Backblaze
duplicity ${SQLFILE} b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}/psql
duplicity ${UPLOADSDIR} b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}/uploads
duplicity ${PROSODYDIR} b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}/prosody
# Cleanup failures
duplicity cleanup --force b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}/${B2_DIR}/psql
duplicity cleanup --force b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}/${B2_DIR}/uploads
duplicity cleanup --force b2://${B2_ACCOUNT}:${B2_KEY}@${B2_BUCKET}/${B2_DIR}/prosody

# Local backup
# Tar everything up and then gunzip it.
tar zcf ${TARFILE} ${UPLOADSDIR} ${PROSODYDIR} ${SQLFILE}
# If backup completed successfully, remove the SQL dump.
[ $? -eq 0 ] && rm ${SQLFILE}
# Keep a simple backup log with size name and md5sum.
echo -e "$(du -sh ${TARFILE})\t$(md5sum ${TARFILE} | awk '{print $1}')" >> ${LOGFILE}
# Remove tars in `latest/` dir.
rm -rf ${DEST}/latest/*tar.gz
# Copy tar backup to `latest/` dir. Hack to download latest backup via ansible.
mv ${TARFILE} ${DEST}/latest/
